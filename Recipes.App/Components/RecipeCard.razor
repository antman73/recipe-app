@using Recipes.Shared.Domain

@if (Recipe != null)
{
    <div class="recipe-card p-2" role="button">
        <div class="d-flex justify-content-between">
            <div><button class="btn btn-sm" @onclick="@(() => OnRecipeClick.InvokeAsync(Recipe.Id))">View</button></div>
            <div><button class="btn btn-sm" @onclick="@(() => OnEditClick.InvokeAsync(Recipe.Id))">Edit</button></div>
        </div>
        <div class="d-flex justify-content-center">
            <div class="h4">@Recipe.Title</div>
        </div>
        <div class="d-flex gap-2">
            <div>
                @if (Recipe.Image == null)
                {
                    <img class="recipe-image" src="./images/no-image.jpg" alt="" />
                }
                else
                {
                    <img class="recipe-image" src="@_imageUrl" alt="" />
                }
            </div>
            <div>
                <div class="fw-bold">Prep time (mins):</div>
                <div>@Recipe.PrepTimeMinutes</div>
                <div class="fw-bold">Cook time (mins):</div>
                <div>@Recipe.CookTimeMinutes</div>
                <div class="fw-bold">Servings:</div>
                <div>@Recipe.Servings</div>
            </div>
        </div>
        <div class="p-2 fst-italic">@Recipe.Description</div>
    </div>
}

@code {

    [Parameter] public Recipe? Recipe { get; set; }
    [Parameter] public EventCallback<int> OnRecipeClick { get; set; }
    [Parameter] public EventCallback<int> OnEditClick { get; set; }

    private string? _imageUrl;

    protected override void OnInitialized()
    {
        if (Recipe is not null)
        {
            LoadData();
        }
    }

    private void LoadData()
    {
        if(Recipe?.Image != null)
            _imageUrl = $"data:image/jpeg;base64,{Convert.ToBase64String(Recipe.Image)}";
    }
}
